version: "3.8"

services:
  immich-server:
    container_name: immich_server
    image: altran1502/immich-server:release
    entrypoint: ["/bin/sh", "./start-server.sh"]
    volumes:
      #- ${UPLOAD_LOCATION}:/usr/src/app/upload
      - immich-upload:/usr/src/app/upload
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    depends_on:
      - redis
      - database
    networks:
      - proxy
      - immich
    labels:
      traefik.enable: "true"
      traefik.docker.network: proxy
      traefik.http.routers.media-immich-api.rule: Host(`${IMMICH_DOMAIN}`) && Pathprefix(`/api`)
      traefik.http.services.media-immich-api.loadbalancer.server.port: "3001"

      traefik.http.routers.media-immich-api.middlewares: service-immich-api-strip
      traefik.http.middlewares.service-immich-api-strip.stripprefix.prefixes: /api

      traefik.http.routers.media-immich-api.entrypoints: websecure
      traefik.http.routers.media-immich-api.tls: "true"
      traefik.http.routers.media-immich-api.tls.certresolver: leresolver

      # set watchtower to monitor only and do not perform the update
      com.centurylinklabs.watchtower.monitor-only: "true"
    restart: unless-stopped

  immich-microservices:
    container_name: immich_microservices
    image: altran1502/immich-server:release
    entrypoint: ["/bin/sh", "./start-microservices.sh"]
    volumes:
      #- ${UPLOAD_LOCATION}:/usr/src/app/upload
      - immich-upload:/usr/src/app/upload
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    depends_on:
      - redis
      - database
    networks:
      - immich
    labels:
      # set watchtower to monitor only and do not perform the update
      com.centurylinklabs.watchtower.monitor-only: "true"
    restart: unless-stopped

  #immich-machine-learning:
  #  container_name: immich_machine_learning
  #  image: altran1502/immich-machine-learning:release
  #  entrypoint: ["/bin/sh", "./entrypoint.sh"]
  #  volumes:
  #    - ${UPLOAD_LOCATION}:/usr/src/app/upload
  #  env_file:
  #    - .env
  #  environment:
  #    - NODE_ENV=production
  #  depends_on:
  #    - database
  #  restart: unless-stopped

  immich-web:
    container_name: immich_web
    image: altran1502/immich-web:release
    entrypoint: ["/bin/sh", "./entrypoint.sh"]
    env_file:
      - .env
    networks:
      - proxy
      - immich
    labels:
      traefik.enable: "true"
      traefik.docker.network: proxy
      traefik.http.routers.media-immich.rule: Host(`${IMMICH_DOMAIN}`)
      traefik.http.services.media-immich.loadbalancer.server.port: "3000"

      traefik.http.routers.media-immich.entrypoints: websecure
      traefik.http.routers.media-immich.tls: "true"
      traefik.http.routers.media-immich.tls.certresolver: leresolver

      # set watchtower to monitor only and do not perform the update
      com.centurylinklabs.watchtower.monitor-only: "true"
    restart: unless-stopped

  redis:
    container_name: immich_redis
    image: redis:6.2
    networks:
      - immich
    labels:
      # set watchtower to monitor only and do not perform the update
      com.centurylinklabs.watchtower.monitor-only: "true"
    restart: unless-stopped

  database:
    container_name: immich_postgres
    image: postgres:14
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      PG_DATA: /var/lib/postgresql/data
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - immich
    labels:
      # set watchtower to monitor only and do not perform the update
      com.centurylinklabs.watchtower.monitor-only: "true" 
    restart: unless-stopped

  #immich-proxy:
  #  container_name: immich_proxy
  #  image: altran1502/immich-proxy:release
  #  environment:
  #    # Make sure these values get passed through from the env file
  #    - IMMICH_SERVER_URL
  #    - IMMICH_WEB_URL
  #  ports:
  #    - 2283:8080
  #  logging:
  #    driver: none
  #  depends_on:
  #    - immich-server
  #  restart: always

volumes:
  pgdata:
  immich-upload:
    external: true

networks:
  proxy:
    external: true
  immich: