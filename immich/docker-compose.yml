version: "3.8"

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    command: [ "start.sh", "immich" ]
    volumes:
      #- ${UPLOAD_LOCATION}:/usr/src/app/upload
      - immich-upload:/usr/src/app/upload
    env_file:
      - .env
    depends_on:
      - redis
      - database
      - typesense
    networks:
      - proxy
      - immich
    logging:
      driver: "local"
    labels:
      traefik.enable: "true"
      traefik.docker.network: proxy
      traefik.http.routers.media-immich-api.rule: Host(`${IMMICH_DOMAIN}`) && Pathprefix(`/api`)
      traefik.http.services.media-immich-api.loadbalancer.server.port: "3001"

      traefik.http.routers.media-immich-api.middlewares: service-immich-api-strip
      traefik.http.middlewares.service-immich-api-strip.stripprefix.prefixes: /api

      traefik.http.routers.media-immich-api.entrypoints: websecure
      traefik.http.routers.media-immich-api.tls: "true"
      traefik.http.routers.media-immich-api.tls.certresolver: leresolver

      # set watchtower to monitor only and do not perform the update
      com.centurylinklabs.watchtower.monitor-only: "true"
    restart: unless-stopped

  immich-microservices:
    container_name: immich_microservices
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    # extends:
    #   file: hwaccel.yml
    #   service: hwaccel
    command: [ "start.sh", "microservices" ]
    volumes:
      #- ${UPLOAD_LOCATION}:/usr/src/app/upload
      - immich-upload:/usr/src/app/upload
    env_file:
      - .env
    depends_on:
      - redis
      - database
      - typesense
    networks:
      - immich
    logging:
      driver: "local"
    labels:
      # set watchtower to monitor only and do not perform the update
      com.centurylinklabs.watchtower.monitor-only: "true"
    restart: unless-stopped

  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    volumes:
      - model-cache:/cache
    env_file:
      - .env
    networks:
      - immich
    labels:
      # set watchtower to monitor only and do not perform the update
      com.centurylinklabs.watchtower.monitor-only: "true"
    restart: always
    logging:
      driver: "local"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
        limits:
          cpus: '3'

  immich-web:
    container_name: immich_web
    image: ghcr.io/immich-app/immich-web:${IMMICH_VERSION:-release}
    env_file:
      - .env
    networks:
      - proxy
      - immich
    logging:
      driver: "local"
    labels:
      traefik.enable: "true"
      traefik.docker.network: proxy
      traefik.http.routers.media-immich.rule: Host(`${IMMICH_DOMAIN}`)
      traefik.http.services.media-immich.loadbalancer.server.port: "3000"

      traefik.http.routers.media-immich.entrypoints: websecure
      traefik.http.routers.media-immich.tls: "true"
      traefik.http.routers.media-immich.tls.certresolver: leresolver

      # set watchtower to monitor only and do not perform the update
      com.centurylinklabs.watchtower.monitor-only: "true"
    restart: unless-stopped

  typesense:
    container_name: immich_typesense
    image: typesense/typesense:0.25.0.rc14
    environment:
      - TYPESENSE_API_KEY=${TYPESENSE_API_KEY}
      - TYPESENSE_DATA_DIR=/data
    logging:
      driver: none
    volumes:
      - tsdata:/data
    networks:
      - immich
    labels:
      # set watchtower to monitor only and do not perform the update
      com.centurylinklabs.watchtower.monitor-only: "true"
    restart: unless-stopped

  redis:
    container_name: immich_redis
    image: redis:6.2-alpine@sha256:70a7a5b641117670beae0d80658430853896b5ef269ccf00d1827427e3263fa3
    networks:
      - immich
    logging:
      driver: "local"
    labels:
      # set watchtower to monitor only and do not perform the update
      com.centurylinklabs.watchtower.monitor-only: "true"
    restart: unless-stopped

  database:
    container_name: immich_postgres
    image: postgres:14-alpine@sha256:28407a9961e76f2d285dc6991e8e48893503cc3836a4755bbc2d40bcc272a441
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      PG_DATA: /var/lib/postgresql/data
    volumes:
      - immich-pgdata:/var/lib/postgresql/data
    networks:
      - immich
    logging:
      driver: "local"
    labels:
      # set watchtower to monitor only and do not perform the update
      com.centurylinklabs.watchtower.monitor-only: "true"
    restart: unless-stopped

volumes:
  immich-pgdata:
    external: true
  immich-upload:
    external: true
  model-cache:
  tsdata:

networks:
  proxy:
    external: true
  immich:
